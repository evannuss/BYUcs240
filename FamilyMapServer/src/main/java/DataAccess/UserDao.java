package DataAccess;

import Model.User;

import java.sql.*;

/**
 * This class is responsible for handling all database operations involving
 * a User object.
 */
public class UserDao {

    private final Connection conn;

    /**
     * Parameterized constructor used to get the connection
     * generated by the Database class.
     * @param conn The connection generated by the Database class.
     */
    public UserDao(Connection conn){
        this.conn = conn;
    }

    /**
     * Used to insert a new user into the database with all its needed information.
     * @param user A User object that has already been created elsewhere is passed in
     *             and translated into a SQL insert command.
     */
    public void insert (User user) throws DataAccessException{
        String sql = "INSERT INTO users (username, password, email, first_name, last_name, " +
                "gender, person_id) VALUES(?,?,?,?,?,?,?);";

        try(PreparedStatement stmt = conn.prepareStatement(sql)){
            stmt.clearParameters();
            stmt.setString(1, user.getUserName());
            stmt.setString(2, user.getPassword());
            stmt.setString(3, user.getEmail());
            stmt.setString(4, user.getFirstName());
            stmt.setString(5, user.getLastName());
            stmt.setString(6, user.getGender());
            stmt.setString(7, user.getPersonID());

            stmt.executeUpdate();
        }
        catch(SQLException ex){
            throw new DataAccessException("There was an error while trying to insert.");
        }
    }

    /**
     * Used to find a single user in the database.
     * @param username The unique username that will be used to find the user we want.
     * @return Find the user in the database and return it as an actual User object.
     */
    public User find(String username) throws DataAccessException{
        User user;
        ResultSet rs = null;
        String sql = "SELECT * FROM users WHERE username = ?;";
        try(PreparedStatement stmt = conn.prepareStatement(sql)){
            stmt.setString(1, username);
            rs = stmt.executeQuery();
            if(rs.next()){
                user = new User(rs.getString("username"), rs.getString("password"),
                                rs.getString("email"), rs.getString("first_name"),
                                rs.getString("last_name"), rs.getString("gender"),
                                rs.getString("person_id"));
                return user;
            }
        }
        catch(SQLException e){
            e.printStackTrace();
            throw new DataAccessException("There was an error trying to find the given user.");
        }
        finally {
            if(rs != null){
                try{
                    rs.close();
                }
                catch(SQLException e){
                    e.printStackTrace();
                    throw new DataAccessException("There was an error trying to close the result set");
                }
            }
        }
        return null;
    }

    /**
     * Used to completely clear the User table
     */
    public void clear() throws DataAccessException{
        String sql = "DELETE FROM users";
        try(PreparedStatement stmt = conn.prepareStatement(sql)){
            stmt.executeUpdate();
        }
        catch(SQLException e){
            e.printStackTrace();
            throw new DataAccessException("Error encountered while clearing the user table.");
        }
    }
}
